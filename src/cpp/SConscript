# -*-python-*-
import os, re

Import( "env" )

# 1. Select and install the headers

include_dir = str(env.Dir( "../include" ).srcnode())
h_pattern = re.compile( r".*\.(h|hpp)$" )
includes = [ "../include/%s" % ( s, ) for s in os.listdir(include_dir) if h_pattern.match( s ) ]

env.ALEAIncludes( "fractalysis", includes )


# Build shared libraries

# 2. Build first library
sources= "gridcomputer.cpp"
target= "jesaispas"

# Add defines to export symbols on Windows
DEFINES= list(env['CPPDEFINES'])
DEFINES.append('jesaispas_DLL')

# Build the library
lib1 = env.ALEALibrary( target, sources, CPPDEFINES=DEFINES)

# 3. Build the second library
env2= env.Copy()
env2.AppendUnique(LIBS= ["jesaispas"])

sources= ["scene_container.cpp"]
target= "libscenecontainer"

DEFINES= list(env['CPPDEFINES'])
DEFINES.append('SCENECONT_DLL')

lib2 = env2.ALEALibrary( target, sources, CPPDEFINES=DEFINES)
